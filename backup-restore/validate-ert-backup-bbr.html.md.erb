---
title: Validating an ERT Backup Taken with BBR
owner: RelEng
---

<strong><%= modified_date %></strong>

<style>
.note.warning {
  background-color: #fdd;
  border-color: #fbb
}
.note.warning:before {
  color: #f99;
}
</style>

This document outlines how to validate a BBR backup of ERT by running an in-place restore of ERT (i.e. not tearing down and redeploying before restore).

<p class="note warning"><strong>Warning</strong>: In-place restore will erase any changes that were made to ERT after the backup was taken. Ensure these steps are only run on a sandbox/dev environment or when recovering from a disaster affecting ERT data.</p>

## <a id="retrieve"></a> Step 1: Retrieve BOSH Director Address and Credentials

Perform the following steps to retrieve the IP address of your BOSH Director and the credentials for logging in from the Ops Manager Director tile:

<%= partial 'bosh_target_director_bbr' %>

## <a id='identify-deployment'></a> Step 2: Identify Your Deployment

After logging in to your BOSH Director, run `bosh deployments` to identify the name of the BOSH deployment that contains PCF:

<pre class='terminal'>
$ bosh -e DIRECTOR_IP --ca-cert /var/tempest/workspaces/default/root_ca_certificate deployments

Name                     Release(s)
cf-example               push-apps-manager-release/661.1.24
                         cf-backup-and-restore/0.0.1
                         binary-buildpack/1.0.11
                         capi/1.28.0
                         cf-autoscaling/91
                         cf-mysql/35
                         ...
</pre>

In the above example, the name of the BOSH deployment that contains PCF is `cf-example`.

## <a id='restore-ert'></a> Step 3: Restore Elastic Runtime

<p class="note"><strong>Note</strong>: If your apps must not be running after a restore run <code>bosh stop</code> on each <code>diego_cell</code> VM in the deployment.</p>

1. If you use an external blobstore and copied it during the backup, restore the external blobstore with your IAAS specific tools before running Elastic Runtime restore.

1. Run the BBR restore command from your jumpbox to restore Elastic Runtime:
<pre class="terminal">
$ BOSH\_CLIENT\_SECRET=BOSH\_PASSWORD \
      bbr deployment \
        --target BOSH\_DIRECTOR\_IP \
        --username BOSH\_CLIENT \
        --deployment DEPLOYMENT\_NAME \
        --ca-cert PATH\_TO\_BOSH\_SERVER\_CERT \
        restore \
          --artifact-path PATH\_TO\_ERT\_BACKUP
</pre>

    Replace the placeholder values as follows:
    <br><br>
    * `BOSH_CLIENT`, `BOSH_PASSWORD`: Use the BOSH UAA user provided in  **Pivotal Ops Manager > Credentials > Uaa Bbr Client Credentials**.
    <br><br>
       You can also retrieve the credentials using the Ops Manager API with a GET request to the following endpoint: `/api/v0/deployed/director/credentials/uaa_bbr_client_credentials`. For more information, see the [Using the Ops Manager API](../ops-man-api.html) topic.<br><br>
    * `BOSH_DIRECTOR_IP`: You retrieved this value in the [Step 1: Retrieve BOSH Director Address and Credentials](#retrieve) section.
    * `DEPLOYMENT-NAME`: You retrieved this value in the [Step 2: Identify Your Deployment](#identify-deployment) section.
    * `PATH_TO_BOSH_SERVER_CERT`: This is the path to the BOSH Director’s Certificate Authority (CA) certificate, if the certificate is not verifiable by the local machine’s certificate chain.
    * `PATH_TO_ERT_BACKUP`: This is the path to the Elastic Runtime backup you want to restore.

    <p class="note validation">
      <strong>Validation</strong>: If you ran <code>bosh stop</code> on each <code>diego_cell</code> before running <code>bbr restore</code>, you can now run <code>cf stop</code> on all apps and then run <code>bosh start</code> on each <code>diego_cell</code>. After this, all apps will be deployed in a stopped state.
    </p>

1. Perform the following steps after restoring Elastic Runtime:
  1. Retrieve the MySQL admin credentials from CredHub using the Ops Manager API:
          1. Perform the procedures in the [Using the Ops Manager API](../ops-man-api.html) topic to authenticate and access the Ops Manager API.
          1. Use the `GET /api/v0/deployed/products` endpoint to retrieve a list of deployed products, replacing `UAA-ACCESS-TOKEN` with the access token recorded in the previous step:
              <pre class="terminal">$ curl "http<span>s:</span>//OPS-MAN-FQDN/api/v0/deployed/products" \
                -X GET \
                -H "Authorization: Bearer UAA-ACCESS-TOKEN"</pre>
          1. In the response to the above request, locate the product with an `installation_name` starting with `cf-` and copy its `guid`.
          1. Run the following `curl` command, replacing `PRODUCT-GUID` with the value of `guid` from the previous step:
              <pre class="terminal">$ curl "http<span>s:</span>//OPS-MAN-FQDN/api/v0/deployed/products/PRODUCT-GUID/variables?name=mysql-admin-credentials" \
                -X GET \
                -H "Authorization: Bearer UAA-ACCESS-TOKEN"</pre>
          1. Record the MySQL admin credentials from the response to the above request.
  1. List the VMs in your deployment:
    <pre class="terminal">$ bosh -e DIRECTOR\_IP --ca-cert /var/tempest/workspaces/default/root\_ca\_certificate \
    -d DEPLOYMENT\_NAME \
    ssh</pre>
  1. Select the `mysql` VM to SSH into.
  1. From the `mysql` VM, run the following command:
    <pre class="terminal">$ sudo /var/vcap/packages/mariadb/bin/mysql -u root -p</pre> When prompted, enter the MySQL admin password.<br><br>
  1. At the MySQL prompt, run the following command:
    <pre class="terminal">mysql> use silk; drop table subnets; drop table gorp_migrations;</pre>
  1. Exit MySQL:
    <pre class="terminal">mysql> exit</pre>
  1. Exit the `mysql` VM:
    <pre class="terminal">$ exit</pre>
  1. List the VMs in your deployment:
    <pre class="terminal">$ bosh -e DIRECTOR\_IP --ca-cert /var/tempest/workspaces/default/root\_ca\_certificate \
    -d DEPLOYMENT\_NAME \
    ssh</pre>
  1. SSH onto each `diego_database` VM and run the following command:
    <pre class="terminal">$ sudo monit restart silk-controller</pre>

      Restored apps will begin to start. The amount of time it takes for all apps to start depends on the number of app instances, the resources available to the underlying infrastructure, and the value of the **Max Inflight Container Starts** field in the Elastic Runtime tile.

1. If desired, scale the MySQL Server job back up to its previous number of instances by navigating to the **Resource Config** section of the Elastic Runtime tile. After scaling the job, return to the Ops Manager Installation Dashboard and click **Apply Changes** to deploy.
